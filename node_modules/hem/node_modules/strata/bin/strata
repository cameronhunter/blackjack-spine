#!/usr/bin/env node

var fs = require("fs"),
    path = require("path"),
    strata = require("strata");

var appfile = path.resolve("./app.js"),
    options = {},
    exit = false,
    arg;

for (var i = 2; i < process.argv.length; ++i) {
    if (exit) {
        break;
    }

    arg = process.argv[i];

    function nextArg() {
        var next = process.argv[++i];

        if (!next) {
            printUsage();
            exit = true;
        }

        return next;
    }

    switch (arg) {
    case "-a":
    case "--address":
        options.host = nextArg();
        break;
    case "-c":
    case "--cert":
        var certfile = nextArg();
        if (path.existsSync(certfile)) {
            options.cert = fs.readFileSync(certfile);
        } else {
            throw new Error('Certificate file "' + certfile + '" does not exist');
        }
        break;
    case "-h":
    case "--help":
        printUsage();
        exit = true;
        break;
    case "-k":
    case "--key":
        var keyfile = nextArg();
        if (path.existsSync(keyfile)) {
            options.key = fs.readFileSync(keyfile);
        } else {
            throw new Error('Key file "' + keyfile + '" does not exist');
        }
        break;
    case "-p":
    case "--port":
        options.port = nextArg();
        break;
    case "-s":
    case "--socket":
        options.socket = nextArg();
        break;
    case "-v":
    case "--version":
        console.log(strata.version.join("."));
        exit = true;
        break;
    default:
        appfile = path.resolve(arg);
    }
}

if (!exit) {
    if (path.existsSync(appfile)) {
        var app = require(appfile);
        strata.run(app, options);
    } else {
        throw new Error('Application file "' + appfile + '" does not exist');
    }
}

function printUsage() {
    var s = [];

    s.push("strata v. " + strata.version.join("."));
    s.push("Usage: strata [options] [appfile]");
    s.push("");
    s.push("  Starts the Strata application contained in the given appfile.");
    s.push("  If none is given, will use the file at $PWD/app.js.");
    s.push("");
    s.push("Options:");
    s.push("  -a, --address   The address to bind to (defaults to 0.0.0.0)");
    s.push("  -c, --cert      The name of the public key certificate file");
    s.push("                  (HTTPS only)");
    s.push("  -h, --help      Show this help message and exit");
    s.push("  -k, --key       The name of the private key file (HTTPS only)");
    s.push("  -p, --port      The port number to listen on (defaults to 1982)");
    s.push("  -s, --socket    The unix socket to listen to. If this is given");
    s.push("                  the -a and -p options are ignored");
    s.push("  -v, --version   Show the current version of Strata and exit");

    console.log(s.join("\n"));
}
